DISTS	Copyright (c) 2012, Mehmet Ali Yatbaz, Enis Sert, Deniz Yuret

Usage: 
Options:
   -h Display this information
   -d <distance-type>. Set <distance-type> 
      0 for Euclid
      1 for Cosine(default)
      2 for Manhattan
      3 for Maximum
      4 for Jensen
   -u <upper-bound>	Calculate 1000NN of the rows up to the <upper-bound>(default number of rows)
   -l <lower-bound>	Calculate 1000NN of the rows starting from <lower-bound>(default 0)
   -p <arg>	Run <arg> parallel jobs to calculate kNN(default 1)
   -k <arg>	Calculate <arg>NN of the data(default 1000)
   -v 		Verbose
input-stream format
<n:number of elements in the row> <c_i:column id> <c_i_v:column val> ... <c_n:column id> <c_n_v:column val>

Algorithm: Calculates 5 different distance "metric" between sparse
input vectors and returns the top N nearest neighbors of each data
instance.  The workload can be distributed to threads.

Sparse Data Format: First element of each row is the number of
non-zero elements on the that row. After the first element each pair
of input is the column id and the value of that column for the given
vector.

Install: Everything is standard C, so just typing make should give you
an executable.

Please see the file LICENSE for terms of use.